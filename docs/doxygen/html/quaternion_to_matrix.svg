<?xml version="1.0" encoding="UTF-8"?>
<svg width="1100" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="quat_grad" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#9B59B6;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#8E44AD;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="dcm_grad" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#E67E22;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#D35400;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="gl_grad" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#1ABC9C;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#16A085;stop-opacity:1" />
    </linearGradient>
    <filter id="shadow">
      <feDropShadow dx="2" dy="2" stdDeviation="3" flood-opacity="0.3"/>
    </filter>
  </defs>

  <!-- Title -->
  <text x="550" y="40" font-family="Arial, sans-serif" font-size="26" font-weight="bold" text-anchor="middle" fill="#2C3E50">
    Rotation Representation: Quaternion → DCM → OpenGL Matrix
  </text>

  <!-- Quaternion -->
  <g transform="translate(50, 100)">
    <rect width="250" height="180" rx="10" fill="url(#quat_grad)" filter="url(#shadow)"/>
    <text x="125" y="30" font-family="Arial" font-size="20" font-weight="bold" text-anchor="middle" fill="white">Quaternion</text>
    <text x="125" y="50" font-family="Arial" font-size="12" text-anchor="middle" fill="#E8E8FF">(Internal Representation)</text>

    <rect x="15" y="65" width="220" height="100" fill="white" fill-opacity="0.9" rx="5"/>

    <text x="125" y="90" font-family="Courier New" font-size="16" font-weight="bold" text-anchor="middle" fill="#8E44AD">q = {w, x, y, z}</text>

    <text x="125" y="115" font-family="Arial" font-size="12" text-anchor="middle" fill="#555">Example: 45° around X-axis</text>
    <text x="125" y="135" font-family="Courier New" font-size="13" text-anchor="middle" fill="#2C3E50">q = {0.924, 0.383, 0, 0}</text>
    <text x="125" y="155" font-family="Arial" font-size="10" text-anchor="middle" fill="#999">4 numbers, no gimbal lock</text>
  </g>

  <!-- Arrow -->
  <g>
    <defs>
      <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
        <polygon points="0 0, 10 3, 0 6" fill="#2C3E50" />
      </marker>
    </defs>
    <path d="M 300 190 L 360 190" stroke="#2C3E50" stroke-width="3" fill="none" marker-end="url(#arrow)"/>
    <text x="330" y="180" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle" fill="#2C3E50">quaternion_to_dcm()</text>
  </g>

  <!-- DCM (3x3) -->
  <g transform="translate(370, 100)">
    <rect width="300" height="180" rx="10" fill="url(#dcm_grad)" filter="url(#shadow)"/>
    <text x="150" y="30" font-family="Arial" font-size="20" font-weight="bold" text-anchor="middle" fill="white">DCM (3×3)</text>
    <text x="150" y="50" font-family="Arial" font-size="12" text-anchor="middle" fill="#FFE8D8">Direction Cosine Matrix</text>

    <rect x="15" y="65" width="270" height="100" fill="white" fill-opacity="0.9" rx="5"/>

    <text x="150" y="88" font-family="Courier New" font-size="11" text-anchor="middle" fill="#555">┌                    ┐</text>
    <text x="150" y="104" font-family="Courier New" font-size="11" text-anchor="middle" fill="#D35400">│ 1.00   0.00   0.00 │</text>
    <text x="150" y="120" font-family="Courier New" font-size="11" text-anchor="middle" fill="#D35400">│ 0.00   0.71  -0.71 │</text>
    <text x="150" y="136" font-family="Courier New" font-size="11" text-anchor="middle" fill="#D35400">│ 0.00   0.71   0.71 │</text>
    <text x="150" y="152" font-family="Courier New" font-size="11" text-anchor="middle" fill="#555">└                    ┘</text>
  </g>

  <!-- Arrow -->
  <path d="M 670 190 L 730 190" stroke="#2C3E50" stroke-width="3" fill="none" marker-end="url(#arrow)"/>
  <text x="700" y="180" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle" fill="#2C3E50">Expand to 4×4</text>

  <!-- OpenGL Matrix (4x4) -->
  <g transform="translate(740, 100)">
    <rect width="300" height="180" rx="10" fill="url(#gl_grad)" filter="url(#shadow)"/>
    <text x="150" y="30" font-family="Arial" font-size="20" font-weight="bold" text-anchor="middle" fill="white">OpenGL Matrix (4×4)</text>
    <text x="150" y="50" font-family="Arial" font-size="12" text-anchor="middle" fill="#D8FFE8">GPU-Ready Format</text>

    <rect x="15" y="65" width="270" height="100" fill="white" fill-opacity="0.9" rx="5"/>

    <text x="150" y="88" font-family="Courier New" font-size="10" text-anchor="middle" fill="#555">┌                       ┐</text>
    <text x="150" y="102" font-family="Courier New" font-size="10" text-anchor="middle" fill="#16A085">│ 1.00  0.00  0.00  0.00│</text>
    <text x="150" y="116" font-family="Courier New" font-size="10" text-anchor="middle" fill="#16A085">│ 0.00  0.71 -0.71  0.00│</text>
    <text x="150" y="130" font-family="Courier New" font-size="10" text-anchor="middle" fill="#16A085">│ 0.00  0.71  0.71  0.00│</text>
    <text x="150" y="144" font-family="Courier New" font-size="10" text-anchor="middle" fill="#16A085">│ 0.00  0.00  0.00  1.00│</text>
    <text x="150" y="158" font-family="Courier New" font-size="10" text-anchor="middle" fill="#555">└                       ┘</text>
  </g>

  <!-- Detailed explanation -->
  <g transform="translate(50, 320)">
    <rect width="1000" height="240" rx="10" fill="#ECF0F1" filter="url(#shadow)"/>
    <text x="500" y="30" font-family="Arial" font-size="20" font-weight="bold" text-anchor="middle" fill="#2C3E50">
      Why This Conversion?
    </text>

    <g transform="translate(30, 50)">
      <!-- Quaternion advantages -->
      <text x="0" y="0" font-family="Arial" font-size="16" font-weight="bold" fill="#8E44AD">Quaternion (Internal)</text>
      <text x="0" y="22" font-family="Arial" font-size="12" fill="#555">✓ No gimbal lock</text>
      <text x="0" y="40" font-family="Arial" font-size="12" fill="#555">✓ Smooth interpolation (SLERP)</text>
      <text x="0" y="58" font-family="Arial" font-size="12" fill="#555">✓ Compact (4 numbers)</text>
      <text x="0" y="76" font-family="Arial" font-size="12" fill="#555">✓ Numerically stable</text>
      <text x="0" y="100" font-family="Arial" font-size="11" fill="#E74C3C">✗ GPU doesn't understand quaternions</text>

      <!-- DCM -->
      <text x="320" y="0" font-family="Arial" font-size="16" font-weight="bold" fill="#D35400">DCM (Intermediate)</text>
      <text x="320" y="22" font-family="Arial" font-size="12" fill="#555">✓ Standard rotation matrix</text>
      <text x="320" y="40" font-family="Arial" font-size="12" fill="#555">✓ Easy to understand</text>
      <text x="320" y="58" font-family="Arial" font-size="12" fill="#555">✓ Each row = axis direction</text>
      <text x="320" y="100" font-family="Arial" font-size="11" fill="#E74C3C">✗ Need 4×4 for OpenGL (translation)</text>

      <!-- OpenGL Matrix -->
      <text x="640" y="0" font-family="Arial" font-size="16" font-weight="bold" fill="#16A085">OpenGL 4×4 (GPU)</text>
      <text x="640" y="22" font-family="Arial" font-size="12" fill="#555">✓ GPU hardware accelerated</text>
      <text x="640" y="40" font-family="Arial" font-size="12" fill="#555">✓ Combines rotation + translation</text>
      <text x="640" y="58" font-family="Arial" font-size="12" fill="#555">✓ Can chain transformations</text>
      <text x="640" y="76" font-family="Arial" font-size="12" fill="#555">✓ Standard graphics pipeline</text>
    </g>

    <!-- Code example -->
    <g transform="translate(30, 160)">
      <text x="0" y="0" font-family="Arial" font-size="14" font-weight="bold" fill="#2C3E50">Code Example:</text>
      <rect x="0" y="5" width="940" height="50" fill="#2C3E50" fill-opacity="0.05" rx="5"/>
      <text x="10" y="25" font-family="Courier New" font-size="11" fill="#2C3E50">quaternion_to_dcm(q, dcm);  // Convert quaternion → 3×3 rotation matrix</text>
      <text x="10" y="40" font-family="Courier New" font-size="11" fill="#2C3E50">glm::mat4 model = glm::mat4(dcm);  // Expand 3×3 → 4×4 (add identity for translation)</text>
      <text x="10" y="55" font-family="Courier New" font-size="11" fill="#2C3E50">glUniformMatrix4fv(loc, 1, GL_FALSE, &amp;model[0][0]);  // Upload to GPU</text>
    </g>
  </g>
</svg>
